setNames(c("date", "acute", "icu", "total")) %>%
mutate(date = seq.Date(as.Date("2020-03-26"), as.Date("2020-03-26") + n() - 1, by = "day")) %>%
filter(!is.na(Acute))
md_hospit <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_TotalCurrentlyHospitalizedAcuteAndICU/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
setNames(c("date", "acute", "icu", "total")) %>%
mutate(date = seq.Date(as.Date("2020-03-26"), as.Date("2020-03-26") + n() - 1, by = "day"))
md_hospit <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_TotalCurrentlyHospitalizedAcuteAndICU/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
setNames(c("date", "acute", "icu", "total")) %>%
mutate(date = seq.Date(as.Date("2020-03-26"), as.Date("2020-03-26") + n() - 1, by = "day")) %>%
filter(!is.na(acute))
md_hospit <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_TotalCurrentlyHospitalizedAcuteAndICU/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
setNames(c("date", "acute", "icu", "total")) %>%
mutate(date = seq.Date(as.Date("2020-03-26"), as.Date("2020-03-26") + n() - 1, by = "day"))
md_statewide <- inner_join(md_hospit, md_volume, by = "date")
View(md_statewide)
md_hospit <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_TotalCurrentlyHospitalizedAcuteAndICU/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
setNames(c("date", "acute", "icu", "total_hospit")) %>%
mutate(date = seq.Date(as.Date("2020-03-26"), as.Date("2020-03-26") + n() - 1, by = "day"),
total_hospit_avg = rollmeanr(total_hospit, 7, fill = NA))
md_statewide <- inner_join(md_hospit, md_volume, by = "date")
md_hospit <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_TotalCurrentlyHospitalizedAcuteAndICU/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
setNames(c("date", "acute", "icu", "total_hospit")) %>%
filter(!is.na(acute)) %>%
mutate(date = seq.Date(as.Date("2020-03-26"), as.Date("2020-03-26") + n() - 1, by = "day"),
total_hospit_avg = rollmeanr(total_hospit, 7, fill = NA))
md_statewide <- full_join(md_hospit, md_volume, by = "date")
md_hospit <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_TotalCurrentlyHospitalizedAcuteAndICU/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
setNames(c("date", "acute", "icu", "total_hospit")) %>%
filter(!is.na(acute)) %>%
mutate(date = seq.Date(as.Date("2020-03-26"), as.Date("2020-03-26") + n() - 1, by = "day"),
total_hospit_avg = rollmeanr(total_hospit, 7, fill = NA))
md_hospit <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_TotalCurrentlyHospitalizedAcuteAndICU/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
setNames(c("date", "acute", "icu", "total_hospit")) %>%
mutate(date = seq.Date(as.Date("2020-03-26"), as.Date("2020-03-26") + n() - 1, by = "day"),
total_hospit_avg = rollmeanr(total_hospit, 7, fill = NA)) %>%
filter(!is.na(acute))
md_hospit <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_TotalCurrentlyHospitalizedAcuteAndICU/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
setNames(c("date", "acute", "icu", "total_hospit")) %>%
mutate(date = seq.Date(as.Date("2020-03-26"), as.Date("2020-03-26") + n() - 1, by = "day")) %>%
filter(!is.na(acute)) %>%
mutate(total_hospit_avg = rollmeanr(total_hospit, 7, fill = NA))
md_statewide <- full_join(md_hospit, md_volume, by = "date")
View(md_statewide)
md_statewide <- full_join(md_hospit, md_volume, by = "date") %>%
arrange(date)
View(md_daily_volume_tested_county)
View(md_counties_cases)
View(md_counties_deaths)
View(md_counties_prob_deaths)
VieW(md_counties_volume)
View(md_counties_volume)
md_counties_volume <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_DailyTestingVolumeByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("2020-06-15"), "county") %>%
mutate(date = as.Date(ifelse(str_sub(name, end = 2) == "d_", str_sub(gsub("[^0-9_]", "", name), start = 2), gsub("[^0-9_]", "", name)), "%m_%d_%y"),
county = gsub(" ", "_", gsub("[.']", "", tolower(county)))) %>%  # woah... I actually know how to use gsub??
select(-name) %>%
inner_join(md_fips, by = "county")
View(md_counties_volume)
View(md_counties_pos)
md_counties_prob_deaths <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_ProbableDeathsByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("4/13/2020", "%m/%d/%y")) %>%
select(date, county = name, prob_deaths = value) %>%
inner_join(md_fips, by = "county")
md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_ConfirmedDeathsByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("4/3/2020", "%m/%d/%y")) %>%
select(date, county = name, deaths = value) %>%
inner_join(md_fips, by = "county")
colnames(md_statewide)
md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_ConfirmedDeathsByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("4/3/2020", "%m/%d/%y")) %>%
select(date, county = name, deaths = value) %>%
inner_join(md_fips, by = "county") %>%
inner_join(md_counties_prob_deaths)
md_counties_deaths <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_ConfirmedDeathsByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("4/3/2020", "%m/%d/%y")) %>%
select(date, county = name, deaths = value) %>%
inner_join(md_fips, by = "county") %>%
inner_join(md_counties_prob_deaths, by = c("date", "county", "fips")) %>%
mutate(deaths = deaths + prob_deaths) %>%
select(-prob_deaths) %>%
group_by(county) %>%
mutate(new_deaths = pmax(deaths - lag(deaths), 0),
new_deaths_avg = rollmeanr(new_deaths, 7, fill = NA)) %>%
ungroup()
md_indicator_combine(md_age_cases, md_age_deaths, md_age_prob_deaths, "age_range") %>%
mutate(age = str_replace_all(str_sub(age_range, 5), c("_to_" = "-", "plus" = "+"))) %>%
select(age, variable, value) %>%
pivot_wider(names_from = variable, values_from = value)
md_indicator_combine(md_age_cases, md_age_deaths, md_age_prob_deaths, "age_range") %>%
mutate(age = str_replace_all(str_sub(age_range, 5), c("_to_" = "-", "plus" = "+"))) %>%
select(age, variable, value)
md_indicator_combine(md_age_cases, md_age_deaths, md_age_prob_deaths, "age_range") %>%
mutate(age = str_replace_all(str_sub(age_range, 5), c("_to_" = "-", "plus" = "+"))) %>%
select(age, variable, value) %>%
pivot_wider(names_from = variable, values_from = value)
select(age, `Confirmed cases`, Deaths)
age_data <- md_indicator_combine(md_age_cases, md_age_deaths, md_age_prob_deaths, "age_range") %>%
mutate(age = str_replace_all(str_sub(age_range, 5), c("_to_" = "-", "plus" = "+"))) %>%
select(age, variable, value) %>%
pivot_wider(names_from = variable, values_from = value) %>%
mutate(Deaths = `Confirmed deaths` + `Probable deaths`) %>%
select(age, `Confirmed cases`, Deaths)
View(age_data)
race_data <- md_indicator_combine(md_race_cases, md_race_deaths, md_race_prob_deaths, "race", uk_text = "not_available") %>%
mutate(race = recode(race, "african_american" = "Black", "asian" = "Asian", "white" = "White", "hispanic" = "Hispanic", "other" = "Other")) %>%
pivot_wider(names_from = variable, values_from = value) %>%
mutate(Deaths = `Confirmed deaths` + `Probable deaths`) %>%
select(race, `Confirmed cases`, Deaths)
View(race_data)
md_counties_deaths <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_ConfirmedDeathsByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("4/3/2020", "%m/%d/%y")) %>%
select(date, county = name, deaths = value) %>%
inner_join(md_fips, by = "county") %>%
inner_join(md_counties_prob_deaths, by = c("date", "county", "fips")) %>%
mutate(deaths = deaths + prob_deaths) %>%
select(-prob_deaths) %>%
group_by(county) %>%
mutate(new_deaths = pmax(deaths - lag(deaths), 0),
new_deaths_avg = rollmeanr(new_deaths, 7, fill = NA)) %>%
ungroup()
md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_DailyTestingVolumeByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("2020-06-15"), "county") %>%
mutate(date = as.Date(ifelse(str_sub(name, end = 2) == "d_", str_sub(gsub("[^0-9_]", "", name), start = 2), gsub("[^0-9_]", "", name)), "%m_%d_%y"),
county = gsub(" ", "_", gsub("[.']", "", tolower(county)))) %>%  # woah... I actually know how to use gsub??
select(-name)
md_counties_volume <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_DailyTestingVolumeByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("2020-06-15"), "county") %>%
mutate(date = as.Date(ifelse(str_sub(name, end = 2) == "d_", str_sub(gsub("[^0-9_]", "", name), start = 2), gsub("[^0-9_]", "", name)), "%m_%d_%y"),
county = gsub(" ", "_", gsub("[.']", "", tolower(county)))) %>%  # woah... I actually know how to use gsub??
select(date, county, new_tests = value) %>%
inner_join(md_fips, by = "county")
md_counties_volume <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_DailyTestingVolumeByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("2020-06-15"), "county") %>%
mutate(date = as.Date(ifelse(str_sub(name, end = 2) == "d_", str_sub(gsub("[^0-9_]", "", name), start = 2), gsub("[^0-9_]", "", name)), "%m_%d_%y"),
county = gsub(" ", "_", gsub("[.']", "", tolower(county)))) %>%  # woah... I actually know how to use gsub??
select(date, county, new_tests = value) %>%
group_by(county) %>%
mutate(new_tests_avg = rollmeanr(new_tests, 7, fill = NA)) %>%
ungroup() %>%
inner_join(md_fips, by = "county")
30+937+101+36+409+296
(30+937+101+36+409+296)/7
(30+937+101+36+409+296)/6
md_counties_pos <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_PosPercentByJursidiction/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
mutate(report_date = seq.Date(as.Date("2020-03-30"), as.Date("2020-03-30") + dplyr::n() - 1, by = "day")) %>%
mutate_at(vars(2:ncol(.)), ~ as.numeric(.)) %>%
rename_at(vars(2:ncol(.)), ~ stri_replace_last_fixed(stri_replace_last_fixed(., "_", ""), "_", " ")) %>%
pivot_longer(cols = -report_date, names_to = c("county", "type"), names_sep = " ", values_to = "percent") %>%
mutate(percent = percent/100) %>%
pivot_wider(names_from = type, values_from = percent) %>%
inner_join(md_fips, by = "county") %>%
select(date = report_date, county, fips, pos = percentpositive, pos_avg = rollingavg)
md_counties <- inner_join(md_counties_cases, md_counties_deaths, by = c("county", "date", "fips")) %>%
inner_join(md_counties_volume, by = c("county", "date", "fips")) %>%
inner_join(md_counties_pos, by = c("county", "date", "fips"))
View(md_counties)
md_counties_cases <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_CasesByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("3/15/2020", "%m/%d/%y")) %>%
select(date, county = name, cases = value) %>%
inner_join(md_fips, by = "county") %>%
inner_join(pop_county, by = c("county", "fips"))
md_counties_cases <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_CasesByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("3/15/2020", "%m/%d/%y")) %>%
select(date, county = name, cases = value) %>%
inner_join(md_fips, by = "county") %>%
inner_join(pop_county, by = c("county", "fips")) %>%
group_by(county) %>%
mutate(new_cases = pmax(cases - lag(cases), 0),
new_cases_avg = rollmeanr(new_cases, 7, fill = NA),
new_cases_100k = cases/population,
new_cases_100k_avg = rollmeanr(new_cases_100k, 7, fill = NA)) %>%
ungroup()
md_counties_cases <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_CasesByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("3/15/2020", "%m/%d/%y")) %>%
select(date, county = name, cases = value) %>%
inner_join(md_fips, by = "county") %>%
inner_join(pop_county, by = c("county", "fips")) %>%
group_by(county) %>%
mutate(new_cases = pmax(cases - lag(cases), 0),
new_cases_avg = rollmeanr(new_cases, 7, fill = NA),
new_cases_100k = cases/population*100000,
new_cases_100k_avg = rollmeanr(new_cases_100k, 7, fill = NA)) %>%
ungroup()
md_counties_cases <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_CasesByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("3/15/2020", "%m/%d/%y")) %>%
select(date, county = name, cases = value) %>%
inner_join(md_fips, by = "county") %>%
inner_join(pop_county, by = c("county", "fips")) %>%
group_by(county) %>%
mutate(new_cases = pmax(cases - lag(cases), 0),
new_cases_avg = rollmeanr(new_cases, 7, fill = NA),
new_cases_100k = cases/population*100000,
new_cases_100k_avg = rollmeanr(new_cases_100k, 7, fill = NA)) %>%
ungroup()
55/71977*100000
md_counties_cases <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_CasesByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("3/15/2020", "%m/%d/%y")) %>%
select(date, county = name, cases = value) %>%
inner_join(md_fips, by = "county") %>%
inner_join(pop_county, by = c("county", "fips")) %>%
group_by(county) %>%
mutate(new_cases = pmax(cases - lag(cases), 0),
new_cases_avg = rollmeanr(new_cases, 7, fill = NA),
new_cases_100k = new_cases/population*100000,
new_cases_100k_avg = rollmeanr(new_cases_100k, 7, fill = NA)) %>%
ungroup()
md_counties <- inner_join(md_counties_cases, md_counties_deaths, by = c("county", "date", "fips")) %>%
inner_join(md_counties_volume, by = c("county", "date", "fips")) %>%
inner_join(md_counties_pos, by = c("county", "date", "fips"))
md_hospit_county <- read_csv("../data/md_hospit_county.csv")
View(md_hospit_county)
md_hospit_county <- read_csv("../data/md_hospit_county.csv") %>%
select(county, fips, date = collection_week, inpatient_percent_occupied, icu_percent_occupied)
moco_hospit <- filter(md_hospit_county, county == 'montgomery')
View(moco_hospit)
moco_hospit[rep(1:nrow(moco_hospit), 7),]
moco_hospit[rep(1:nrow(moco_hospit), 7),] %>% View()
moco_hospit %>% slice(rep(1:n(), each = 7)) %>% View()
md_hospit_county <- read_csv("../data/md_hospit_county.csv") %>%
select(county, fips, date = collection_week, inpatient_percent_occupied, icu_percent_occupied) %>%
group_by(county, fips) %>%
slice(rep(1:n(), each = 7)) %>%
mutate(date = date + 1:n() - 1L) %>%
ungroup()
md_hospit_county <- read_csv("../data/md_hospit_county.csv") %>%
select(county, fips, date = collection_week, inpatient_percent_occupied, icu_percent_occupied) %>%
group_by(county, fips) %>%
slice(rep(1:n(), each = 7)) %>%
mutate(date = date + 1:n() - 1L) %>%
ungroup() %>%
arrange(county, date)
md_hospit_county <- read_csv("../data/md_hospit_county.csv") %>%
select(county, fips, date = collection_week, inpatient_percent_occupied, icu_percent_occupied) %>%
group_by(county, fips) %>%
slice(rep(1:n(), each = 7)) %>%
mutate(date = date + 1:n() - 1L) %>%
ungroup() %>%
arrange(date, county)
md_hospit_county <- read_csv("../data/md_hospit_county.csv") %>%
select(county, fips, date = collection_week, inpatient_percent_occupied, icu_percent_occupied) %>%
group_by(county, fips) %>%
slice(rep(1:n(), each = 6)) %>%
mutate(date = date + 1:n() - 1L) %>%
ungroup() %>%
arrange(date, county)
md_hospit_county <- read_csv("../data/md_hospit_county.csv") %>%
select(county, fips, date = collection_week, inpatient_percent_occupied, icu_percent_occupied) %>%
group_by(county, fips) %>%
slice(rep(1:n(), each = 7))
md_hospit_county <- read_csv("../data/md_hospit_county.csv") %>%
select(county, fips, date = collection_week, inpatient_percent_occupied, icu_percent_occupied) %>%
group_by(county, fips) %>%
slice(rep(1:n(), each = 7)) %>%
group_by(date) %>%
mutate(date = date + 1:n() - 1L) %>%
ungroup() %>%
arrange(date, county)
md_hospit_county <- read_csv("../data/md_hospit_county.csv") %>%
select(county, fips, collection_week, inpatient_percent_occupied, icu_percent_occupied) %>%
group_by(county, fips) %>%
slice(rep(1:n(), each = 7)) %>%
group_by(collection_week) %>%
mutate(date = collection_week + 1:n() - 1L) %>%
ungroup() %>%
arrange(date, county)
md_hospit_county <- read_csv("../data/md_hospit_county.csv") %>%
select(county, fips, collection_week, inpatient_percent_occupied, icu_percent_occupied) %>%
group_by(county, fips) %>%
slice(rep(1:n(), each = 7)) %>%
group_by(collection_week) %>%
mutate(date = collection_week + 1:n() - 1L) %>%
ungroup() %>%
select(-collection_week) %>%
arrange(date, county)
md_hospit_county <- read_csv("../data/md_hospit_county.csv") %>%
select(county, fips, collection_week, inpatient_percent_occupied, icu_percent_occupied) %>%
group_by(county, fips) %>%
slice(rep(1:n(), each = 7)) %>%
group_by(collection_week) %>%
mutate(date = collection_week + 1:n() - 1L) %>%
ungroup() %>%
select(-collection_week) %>%
arrange(county, date)
md_counties <- inner_join(md_counties_cases, md_counties_deaths, by = c("county", "date", "fips")) %>%
inner_join(md_counties_volume, by = c("county", "date", "fips")) %>%
inner_join(md_counties_pos, by = c("county", "date", "fips")) %>%
inner_join(md_hospit_county, by = c("county", "date", "fips")) %>%
select(county, fips, date, cases, deaths, prob_deaths, new_cases, new_deaths, new_prob_deaths)
md_counties <- inner_join(md_counties_cases, md_counties_deaths, by = c("county", "date", "fips")) %>%
inner_join(md_counties_volume, by = c("county", "date", "fips")) %>%
inner_join(md_counties_pos, by = c("county", "date", "fips")) %>%
inner_join(md_hospit_county, by = c("county", "date", "fips"))
View(hospit_data)
View(md_hospit_county)
md_counties_hospit <- read_csv("../data/md_hospit_county.csv") %>%
select(county, fips, collection_week, inpatient_percent_occupied, icu_percent_occupied) %>%
group_by(county, fips) %>%
slice(rep(1:n(), each = 7)) %>%  # assume the same occupancy for each day of the week
group_by(collection_week) %>%
mutate(date = collection_week + 1:n() - 1L) %>%
ungroup() %>%
select(-collection_week) %>%
arrange(county, date)
View(md_counties_hospit)
read_csv("../data/md_hospit_county.csv")
read_csv("../data/md_hospit_county.csv") %>% View()
md_counties_hospit <- read_csv("../data/md_hospit_county.csv") %>%
select(county, fips, collection_week, inpatient_percent_occupied, icu_percent_occupied) %>%
group_by(county, fips) %>%
slice(rep(1:n(), each = 7)) %>%  # assume the same occupancy for each day of the week
group_by(county, fips, collection_week) %>%
mutate(date = collection_week + 1:n() - 1L) %>%
ungroup() %>%
select(-collection_week) %>%
arrange(county, date)
View(md_counties_hospit)
md_counties <- inner_join(md_counties_cases, md_counties_deaths, by = c("county", "date", "fips")) %>%
inner_join(md_counties_volume, by = c("county", "date", "fips")) %>%
inner_join(md_counties_pos, by = c("county", "date", "fips")) %>%
inner_join(md_counties_hospit, by = c("county", "date", "fips"))
View(md_counties_cases)
colnames(md_counties_cases)
md_counties_cases <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_CasesByCounty/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("3/15/2020", "%m/%d/%y")) %>%
select(date, county = name, cases = value) %>%
inner_join(md_fips, by = "county") %>%
inner_join(pop_county, by = c("county", "fips")) %>%
group_by(county) %>%
mutate(new_cases = pmax(cases - lag(cases), 0),
new_cases_avg = rollmeanr(new_cases, 7, fill = NA),
new_cases_100k = new_cases/population*100000,
new_cases_100k_avg = rollmeanr(new_cases_100k, 7, fill = NA)) %>%
ungroup() %>%
select(date, county, fips, population, cases, new_cases, new_cases_avg, new_cases_100k, new_cases_100k_avg)
md_counties <- inner_join(md_counties_cases, md_counties_deaths, by = c("county", "date", "fips")) %>%
inner_join(md_counties_volume, by = c("county", "date", "fips")) %>%
inner_join(md_counties_pos, by = c("county", "date", "fips")) %>%
inner_join(md_counties_hospit, by = c("county", "date", "fips"))
View(md_zips)
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/pull_data.R')
md_counties <- inner_join(md_counties_cases, md_counties_deaths, by = c("county", "date", "fips")) %>%
inner_join(md_counties_volume, by = c("county", "date", "fips")) %>%
inner_join(md_counties_pos, by = c("county", "date", "fips")) %>%
left_join(md_counties_hospit, by = c("county", "date", "fips"))
md_counties <- inner_join(md_counties_cases, md_counties_deaths, by = c("county", "date", "fips")) %>%
left_join(md_counties_volume, by = c("county", "date", "fips")) %>%
left_join(md_counties_pos, by = c("county", "date", "fips")) %>%
left_join(md_counties_hospit, by = c("county", "date", "fips"))
md_counties <- left_join(md_counties_cases, md_counties_deaths, by = c("county", "date", "fips")) %>%
left_join(md_counties_volume, by = c("county", "date", "fips")) %>%
left_join(md_counties_pos, by = c("county", "date", "fips")) %>%
left_join(md_counties_hospit, by = c("county", "date", "fips"))
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/pull_data.R')
library(readxl)
ZIP_COUNTY_092020 <- read_excel("~/Downloads/ZIP_COUNTY_092020.xlsx",
col_types = c("text", "text", "skip",
"skip", "skip", "skip"))
View(ZIP_COUNTY_092020)
zip_crosswalk <- select(zip = ZIP, county = county) %>% inner_join(md_fips)
zip_crosswalk <- select(ZIP_COUNTY_092020, zip = ZIP, county = county) %>% inner_join(md_fips)
zip_crosswalk <- select(ZIP_COUNTY_092020, zip = ZIP, county = COUNTY) %>% inner_join(md_fips)
zip_crosswalk <- select(ZIP_COUNTY_092020, zip = ZIP, county = COUNTY) %>% inner_join(md_fips, by = "fips")
zip_crosswalk <- select(ZIP_COUNTY_092020, zip = ZIP, county = COUNTY) %>% inner_join(md_fips, by = c("county" = "fips"))
zip_crosswalk <- select(ZIP_COUNTY_092020, zip = ZIP, county = COUNTY) %>% inner_join(mutate(md_fips, fips = as.character(fips)), by = c("county" = "fips"))
View(zip_crosswalk)
zip_crosswalk <- select(ZIP_COUNTY_092020, zip = ZIP, fips = COUNTY) %>% inner_join(mutate(md_fips, fips = as.character(fips)), by = "fips")
unique(md_zips$zip)
length(unique(md_zips$zip))
zip_crosswalk <- select(ZIP_COUNTY_092020, zip = ZIP, fips = COUNTY, 3)
zip_crosswalk <- read_excel("~/Downloads/ZIP_COUNTY_092020.xlsx",
col_types = c("text", "text", "text",
"text", "text", "text"))
zip_crosswalk2 <- group_by(zip_crosswalk, ZIP) %>% arrange(TOT_RATIO) %>% summarize(county = first())
zip_crosswalk2 <- group_by(zip_crosswalk, ZIP) %>% arrange(TOT_RATIO) %>% summarize(county = first(county))
zip_crosswalk2 <- group_by(zip_crosswalk, ZIP) %>% arrange(TOT_RATIO) %>% summarize(county = first(COUNTY))
View(zip_crosswalk2)
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/zip_crosswalk.R')
easypackages::libraries("tidyverse", "readxl")
rep("text", 5)
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 5)) %>%
group_by(zip_crosswalk, ZIP) %>%
arrange(desc(TOT_RATIO)) %>%
summarize(county = first(COUNTY))
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 6)) %>%
group_by(zip_crosswalk, ZIP) %>%
arrange(desc(TOT_RATIO)) %>%
summarize(county = first(COUNTY))
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 6)) %>%
group_by(ZIP) %>%
arrange(desc(TOT_RATIO)) %>%
summarize(county = first(COUNTY))
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/pull_data.R')
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/zip_crosswalk.R')
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/zip_crosswalk.R')
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/zip_crosswalk.R')
md_zips <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_MASTER_ZIP_CODE_CASES/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("2020-04-11"), "zip_code") %>%
select(date, zip = zip_code, cases = value) %>%
group_by(zip) %>%
mutate(new_cases = pmax(cases - lag(cases), 0)) %>%
ungroup() %>%
inner_join(pop_zip) %>%
mutate(cases_per_100k = cases/population*100000) %>%
inner_join(zip_crosswalk)
View(md_zips)
md_zips <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_MASTER_ZIP_CODE_CASES/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("2020-04-11"), "zip_code") %>%
select(date, zip = zip_code, cases = value) %>%
group_by(zip) %>%
mutate(new_cases = pmax(cases - lag(cases), 0)) %>%
ungroup() %>%
inner_join(pop_zip) %>%
mutate(cases_per_100k = cases/population*100000) %>%
left_join(zip_crosswalk)
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 6)) %>%
group_by(ZIP) %>%
arrange(desc(TOT_RATIO)) %>%
summarize(fips = first(COUNTY)) %>%
ungroup() %>%
rename(zip = ZIP)
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 6)) %>%
inner_join(md_fips, by = "fips") %>%
group_by(ZIP) %>%
arrange(desc(TOT_RATIO)) %>%
summarize(fips = first(COUNTY)) %>%
ungroup() %>%
rename(zip = ZIP)
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 6)) %>%
inner_join(md_fips, by = c("COUNTY" = "fips")) %>%
group_by(ZIP) %>%
arrange(desc(TOT_RATIO)) %>%
summarize(fips = first(COUNTY)) %>%
ungroup() %>%
rename(zip = ZIP)
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 6)) %>%
inner_join(md_fips, by = c("COUNTY" = "fips"))
View(md_fips)
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 6))
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 6)) %>%
inner_join(md_fips, by = c("COUNTY" = "fips")) %>%
group_by(ZIP) %>%
arrange(desc(TOT_RATIO))
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 6)) %>%
inner_join(md_fips, by = c("COUNTY" = "fips")) %>%
group_by(ZIP) %>%
arrange(desc(TOT_RATIO)) %>%
summarize(fips = first(COUNTY))
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 6)) %>%
inner_join(md_fips, by = c("COUNTY" = "fips")) %>%
group_by(ZIP) %>%
arrange(desc(TOT_RATIO)) %>%
summarize(fips = first(COUNTY)) %>%
ungroup()
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 6)) %>%
inner_join(md_fips, by = c("COUNTY" = "fips")) %>%
group_by(ZIP) %>%
arrange(desc(TOT_RATIO)) %>%
summarize(fips = first(COUNTY)) %>%
ungroup() %>%
rename(zip = ZIP)
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/zip_crosswalk.R')
md_zips <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_MASTER_ZIP_CODE_CASES/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("2020-04-11"), "zip_code") %>%
select(date, zip = zip_code, cases = value) %>%
group_by(zip) %>%
mutate(new_cases = pmax(cases - lag(cases), 0)) %>%
ungroup() %>%
inner_join(pop_zip) %>%
mutate(cases_per_100k = cases/population*100000) %>%
left_join(zip_crosswalk)
zip_crosswalk <- read_excel("ZIP_COUNTY_092020.xlsx", col_types = rep("text", 6)) %>%
inner_join(md_fips, by = c("COUNTY" = "fips")) %>%
group_by(ZIP) %>%
arrange(desc(TOT_RATIO)) %>%
summarize(fips = first(COUNTY), county = first(county)) %>%
ungroup() %>%
rename(zip = ZIP)
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/zip_crosswalk.R')
md_zips <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_MASTER_ZIP_CODE_CASES/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("2020-04-11"), "zip_code") %>%
select(date, zip = zip_code, cases = value) %>%
group_by(zip) %>%
mutate(new_cases = pmax(cases - lag(cases), 0)) %>%
ungroup() %>%
inner_join(pop_zip, by = "zip") %>%
mutate(cases_per_100k = cases/population*100000) %>%
left_join(zip_crosswalk, by = "zip")
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/pull_data.R')
View(md_zips)
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/pull_data.R')
md_zips <- md_api("https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDCOVID19_MASTER_ZIP_CODE_CASES/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json") %>%
md_api_pivot(as.Date("2020-04-11"), "zip_code") %>%
select(date, zip = zip_code, cases = value) %>%
group_by(zip) %>%
mutate(new_cases = pmax(cases - lag(cases), 0)) %>%
ungroup() %>%
inner_join(pop_zip, by = "zip") %>%
mutate(cases_per_100k = cases/population*100000,
zip = as.character(zip)) %>%
left_join(zip_crosswalk, by = "zip")
typeof(zip_crosswalk$zip)
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/zip_crosswalk.R')
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/pull_data.R')
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/pull_data.R')
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/pull_data.R')
md_fips
data.frame(County = c("Allegany", "Anne Arundel", "Baltimore County", "Baltimore City", "Calvert", "Caroline", "Carroll", "Cecil", "Charles", "Dorchester", "Frederick", "Garrett", "Harford", "Howard", "Kent", "Montgomery", "Prince George's", "Queen Anne's", "Somerset", "St. Mary's", "Talbot", "Washington", "Wicomico", "Worcester")) %>%
bind_cols(md_fips)
tail(md_fips)
data.frame(County = c("Allegany", "Anne Arundel", "Baltimore County", "Baltimore City", "Calvert", "Caroline", "Carroll", "Cecil", "Charles", "Dorchester", "Frederick", "Garrett", "Harford", "Howard", "Kent", "Montgomery", "Prince George's", "Queen Anne's", "Somerset", "St. Mary's", "Talbot", "Washington", "Wicomico", "Worcester")) %>%
bind_cols(drop_na(md_fips))
source('~/Documents/New covid map/MD-COVID-Tracker/New tracker data/pull_data.R')
